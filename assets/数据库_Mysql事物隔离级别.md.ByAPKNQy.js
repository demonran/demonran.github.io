import{_ as a,c as e,o as t,a1 as l}from"./chunks/framework.rLRl8Q3O.js";const m=JSON.parse('{"title":"MySQL的事物隔离级别是怎么实现的？","description":"","frontmatter":{},"headers":[],"relativePath":"数据库/Mysql事物隔离级别.md","filePath":"数据库/Mysql事物隔离级别.md"}'),o={name:"数据库/Mysql事物隔离级别.md"},s=l('<h1 id="mysql的事物隔离级别是怎么实现的" tabindex="-1">MySQL的事物隔离级别是怎么实现的？ <a class="header-anchor" href="#mysql的事物隔离级别是怎么实现的" aria-label="Permalink to &quot;MySQL的事物隔离级别是怎么实现的？&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#事物有哪些特性">事物有哪些特性？</a></li></ul></nav><h2 id="事物有哪些特性" tabindex="-1">事物有哪些特性？ <a class="header-anchor" href="#事物有哪些特性" aria-label="Permalink to &quot;事物有哪些特性？&quot;">​</a></h2><p>事物是有MySQL的存储引擎来实现的，InnoDB是支持事物的。</p><p>不是所有的存储引擎都支持事物， MySQL的MyISAM引擎就不支持事物，也正是这样，大多数MySQL引擎都是InnoDB。</p><p>实现事物必须遵守4个特性</p><ul><li>原子性（Atomicity）: 是指一个数据是不可分割的工作单元，其中的操作要么都做，要么都不做。如果事物中的一个sql执行失败，则已经执行的语句也必须回滚，数据库回退到事物前的状态</li><li>一致性（Consistency）: 事物操作的前后</li><li>隔离性（Isolation）：数据库允许</li><li>持久性</li></ul>',7),i=[s];function n(_,r,c,d,h,p){return t(),e("div",null,i)}const u=a(o,[["render",n]]);export{m as __pageData,u as default};
